openapi: 3.0.3
info:
  title: API oPROsita
  description: API REST para gestión de grupos, usuarios, contenido y simulacros
  version: 1.0.0

servers:
  - url: http://localhost:8080/api

paths:
  /grupos:
    get:
      summary: Obtener todos los grupos
      responses:
        '200':
          description: Lista de grupos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Grupo'
        '500':
          description: Error interno
    post:
      summary: Crear un nuevo grupo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Grupo'
      responses:
        '201':
          description: Grupo creado

  /grupos/{id}:
    get:
      summary: Obtener detalle de un grupo
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Grupo encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grupo'
        '404':
          description: Grupo no encontrado
    put:
      summary: Actualizar un grupo
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Grupo'
      responses:
        '200':
          description: Grupo actualizado
    delete:
      summary: Eliminar un grupo
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Grupo eliminado correctamente
        '404':
          description: Grupo no encontrado

  /grupos/{grupoId}/alumnos:
    get:
      summary: Obtener alumnos de un grupo
      parameters:
        - in: path
          name: grupoId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Lista de alumnos
    post:
      summary: Añadir un alumno a un grupo
      parameters:
        - in: path
          name: grupoId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Alumno'
      responses:
        '201':
          description: Alumno añadido

  /grupos/{grupoId}/alumnos/{alumnoId}:
    delete:
      summary: Eliminar un alumno de un grupo
      parameters:
        - in: path
          name: grupoId
          required: true
          schema:
            type: integer
        - in: path
          name: alumnoId
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Alumno eliminado correctamente del grupo

  /alumnos/{id}:
    delete:
      summary: Eliminar un alumno
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Alumno eliminado correctamente

  /alumnos/{alumnoId}/contenido:
    get:
      summary: Obtener contenido de un alumno
      parameters:
        - in: path
          name: alumnoId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Lista de contenido

    post:
      summary: Añadir contenido al alumno (texto + tipo + PDF)
      parameters:
        - in: path
          name: alumnoId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                texto:
                  type: string
                tipoContenido:
                  type: string
                  enum: [ temas, programacion, practico ]
                mes:
                  type: string
                file:
                  type: string
                  format: binary
      responses:
        '201':
          description: Contenido añadido

  /alumnos/{alumnoId}/contenido/{contenidoId}:
    delete:
      summary: Eliminar un contenido del alumno
      parameters:
        - in: path
          name: alumnoId
          required: true
          schema:
            type: integer
        - in: path
          name: contenidoId
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Contenido eliminado correctamente

  /grupos/{grupoId}/meses/{mes}/contenido:
    get:
      summary: Obtener contenido por grupo y mes
      parameters:
        - in: path
          name: grupoId
          required: true
          schema:
            type: integer
        - in: path
          name: mes
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Lista de contenido
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContenidoItem'
    post:
      summary: Añadir contenido a un grupo en un mes
      parameters:
        - in: path
          name: grupoId
          required: true
          schema:
            type: integer
        - in: path
          name: mes
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContenidoItem'
      responses:
        '201':
          description: Contenido añadido

  /contenido/{id}:
    delete:
      summary: Eliminar un contenido
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Contenido eliminado correctamente

  /simulacros:
    get:
      summary: Obtener simulacros
      responses:
        '200':
          description: Lista de simulacros
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Simulacro'

    post:
      summary: Crear un nuevo simulacro (PDF + descripción)
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                descripcion:
                  type: string
                grupoId:
                  type: integer
                file:
                  type: string
                  format: binary
      responses:
        '201':
          description: Simulacro creado

  /simulacros/{id}:
    delete:
      summary: Eliminar un simulacro
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Simulacro eliminado correctamente

  /novedades/profesor:
    get:
      summary: Obtener novedades para profesores
      responses:
        '200':
          description: Lista de novedades
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Novedad'

    post:
      summary: Crear novedad para profesores
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Novedad'
      responses:
        '201':
          description: Novedad creada

  /novedades/alumno:
    get:
      summary: Obtener novedades para alumnos
      responses:
        '200':
          description: Lista de novedades
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Novedad'

    post:
      summary: Crear novedad para alumnos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Novedad'
      responses:
        '201':
          description: Novedad creada

    put:
      summary: Actualizar novedad para alumno
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Novedad'
      responses:
        '200':
          description: Novedad actualizada

    delete:
      summary: Eliminar todas las novedades para alumno
      responses:
        '204':
          description: Novedades eliminadas correctamente

  /novedades/{id}:
    delete:
      summary: Eliminar una novedad
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Novedad eliminada correctamente

  /noticias:
    get:
      summary: Obtener noticias
      responses:
        '200':
          description: Lista de noticias
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Noticia'

    post:
      summary: Crear una nueva noticia (PDF + descripción)
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                descripcion:
                  type: string
                grupoId:
                  type: integer
                file:
                  type: string
                  format: binary
      responses:
        '201':
          description: Noticia creada
  /noticias/{id}:
    delete:
      summary: Eliminar una noticia
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Noticia eliminada correctamente

  /archivos/upload:
    post:
      summary: Subir archivo
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '201':
          description: Archivo subido correctamente

  /archivos/{id}/download:
    get:
      summary: Descargar archivo por ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Archivo descargado
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '404':
          description: Archivo no encontrado
components:
  schemas:
    Grupo:
      type: object
      properties:
        id:
          type: integer
        nombre:
          type: string
        meses:
          type: array
          items:
            $ref: '#/components/schemas/Mes'

    Mes:
      type: object
      properties:
        id:
          type: integer
        nombre:
          type: string

    Usuario:
      type: object
      discriminator:
        propertyName: tipo
      properties:
        id:
          type: integer
        nombre:
          type: string
        grupoId:
          type: integer

    Alumno:
      allOf:
        - $ref: '#/components/schemas/Usuario'
        - type: object
          properties:
            tipo:
              type: string
              enum: [alumno]

    Profesor:
      allOf:
        - $ref: '#/components/schemas/Usuario'
        - type: object
          properties:
            tipo:
              type: string
              enum: [profesor]

    ContenidoItem:
      type: object
      properties:
        id:
          type: integer
        texto:
          type: string
        tipoContenido:
          type: string
          enum: [temas, programacion, practico]
        alumnoId:
          type: integer
          nullable: true
        grupoId:
          type: integer
        mes:
          type: string
        archivoId:
          type: integer
          nullable: true

    Archivo:
      type: object
      properties:
        id:
          type: integer
        nombre:
          type: string
        tipo:
          type: string
        url:
          type: string
        datos:
          type: string
          format: byte

    Simulacro:
      type: object
      properties:
        id:
          type: integer
        descripcion:
          type: string
        archivoId:
          type: integer
        grupoId:
          type: integer

    Novedad:
      type: object
      properties:
        id:
          type: integer
        texto:
          type: string
        tipoDestinatario:
          type: string
          enum: [profesor, alumno]
        fechaCreacion:
          type: string
          format: date-time

    Noticia:
      type: object
      properties:
        id:
          type: integer
        descripcion:
          type: string
        archivoId:
          type: integer
        grupoId:
          type: integer
