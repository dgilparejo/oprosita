/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.5.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.oprosita.backend.api;

import com.oprosita.backend.model.generated.Conversacion;
import com.oprosita.backend.model.generated.Mensaje;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-05-23T22:26:08.390066400+02:00[Europe/Madrid]", comments = "Generator version: 7.5.0")
@Validated
@Tag(name = "chat", description = "the chat API")
public interface ChatApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /chat/mensajes : Enviar un mensaje
     *
     * @param mensaje  (required)
     * @return Mensaje enviado (status code 201)
     */
    @Operation(
        operationId = "enviarMensaje",
        summary = "Enviar un mensaje",
        tags = { "chat" },
        responses = {
            @ApiResponse(responseCode = "201", description = "Mensaje enviado")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/chat/mensajes",
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Void> enviarMensaje(
        @Parameter(name = "Mensaje", description = "", required = true) @Valid @RequestBody Mensaje mensaje
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /chat/conversaciones : Obtener lista de conversaciones
     *
     * @param usuarioId  (required)
     * @return Lista de conversaciones (status code 200)
     */
    @Operation(
        operationId = "getConversaciones",
        summary = "Obtener lista de conversaciones",
        tags = { "chat" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Lista de conversaciones", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = Conversacion.class)))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/chat/conversaciones",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<Conversacion>> getConversaciones(
        @NotNull @Parameter(name = "usuarioId", description = "", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "usuarioId", required = true) Integer usuarioId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"otroUsuarioId\" : 1, \"fechaUltimoMensaje\" : \"2000-01-23T04:56:07.000+00:00\", \"ultimoMensaje\" : \"ultimoMensaje\", \"id\" : 0, \"noLeidos\" : 5, \"usuarioId\" : 6 }, { \"otroUsuarioId\" : 1, \"fechaUltimoMensaje\" : \"2000-01-23T04:56:07.000+00:00\", \"ultimoMensaje\" : \"ultimoMensaje\", \"id\" : 0, \"noLeidos\" : 5, \"usuarioId\" : 6 } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /chat/mensajes : Obtener mensajes
     *
     * @param remitente  (optional)
     * @param destinatario  (optional)
     * @return Lista de mensajes (status code 200)
     */
    @Operation(
        operationId = "getMensajes",
        summary = "Obtener mensajes",
        tags = { "chat" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Lista de mensajes", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = Mensaje.class)))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/chat/mensajes",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<Mensaje>> getMensajes(
        @Parameter(name = "remitente", description = "", in = ParameterIn.QUERY) @Valid @RequestParam(value = "remitente", required = false) Integer remitente,
        @Parameter(name = "destinatario", description = "", in = ParameterIn.QUERY) @Valid @RequestParam(value = "destinatario", required = false) Integer destinatario
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"contenido\" : \"contenido\", \"fechaEnvio\" : \"2000-01-23T04:56:07.000+00:00\", \"remitente\" : 6, \"leido\" : true, \"id\" : 0, \"destinatario\" : 1 }, { \"contenido\" : \"contenido\", \"fechaEnvio\" : \"2000-01-23T04:56:07.000+00:00\", \"remitente\" : 6, \"leido\" : true, \"id\" : 0, \"destinatario\" : 1 } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
