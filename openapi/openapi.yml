openapi: 3.0.3
info:
  title: API oPROsita
  description: API REST para gestión de grupos, usuarios, contenido y simulacros
  version: 1.3.5

servers:
  - url: http://localhost:8080/api/v1

tags:
  - name: usuarios
    description: Gestión genérica de usuarios (alumnos y profesores)
  - name: grupos
    description: Operaciones con grupos de alumnos
  - name: alumnos
    description: Gestión de alumnos
  - name: contenido
    description: Gestión de contenido educativo
  - name: simulacros
    description: Operaciones con simulacros de examen
  - name: novedades
    description: Sistema de novedades y notificaciones
  - name: noticias
    description: Gestión de noticias
  - name: archivos
    description: Gestión de archivos y documentos

paths:
  /usuarios:
    get:
      tags:
        - usuarios
      operationId: obtenerUsuarios
      summary: Obtener todos los usuarios (alumnos y profesores)
      parameters:
        - in: query
          name: tipo
          required: false
          schema:
            type: string
            enum: [ alumno, profesor ]
          description: Filtrar por tipo de usuario
      responses:
        '200':
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
        '404':
          description: Usuario no encontrado

    post:
      tags:
        - usuarios
      operationId: crearUsuario
      summary: Crear un nuevo usuario (alumno o profesor)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Alumno'
                - $ref: '#/components/schemas/Profesor'
              example:
                nombre: Diego
                tipo: alumno
      responses:
        '201':
          description: Usuario creado
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Alumno'
                  - $ref: '#/components/schemas/Profesor'

    delete:
      tags:
        - usuarios
      operationId: eliminarUsuario
      summary: Eliminar un usuario (alumno o profesor)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Usuario eliminado correctamente
        '404':
          description: Usuario no encontrado

  /usuarios/me:
    get:
      tags:
        - usuarios
      summary: Obtener información del usuario autenticado
      operationId: getMiUsuario
      responses:
        '200':
          description: Usuario encontrado
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Alumno'
                  - $ref: '#/components/schemas/Profesor'
        '401':
          description: No autenticado
        '404':
          description: Usuario no encontrado

  /grupos:
    get:
      tags:
        - grupos
      operationId: getGrupos
      summary: Obtener todos los grupos
      responses:
        '200':
          description: Lista de grupos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Grupo'
        '404':
          description: Grupo no encontrado
        '500':
          description: Error interno
    post:
      tags:
        - grupos
      operationId: createGrupo
      summary: Crear un nuevo grupo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Grupo'
            example:
              nombre: Grupo 1
              meses:
                - nombre: Septiembre
                - nombre: Octubre
                - nombre: Noviembre
                - nombre: Diciembre
                - nombre: Enero
                - nombre: Febrero
                - nombre: Marzo
                - nombre: Abril
                - nombre: Mayo
                - nombre: Junio
      responses:
        '201':
          description: Grupo creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grupo'
        '404':
          description: Grupo no encontrado

  /grupos/{id}:
    get:
      tags:
        - grupos
      operationId: getGrupoById
      summary: Obtener detalle de un grupo
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Grupo encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grupo'
        '404':
          description: Grupo no encontrado
    delete:
      tags:
        - grupos
      operationId: deleteGrupo
      summary: Eliminar un grupo
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Grupo eliminado correctamente
        '404':
          description: Grupo no encontrado

  /grupos/{grupoId}/alumnos:
    get:
      tags:
        - grupos
        - alumnos
      operationId: getAlumnosByGrupo
      summary: Obtener alumnos de un grupo
      parameters:
        - in: path
          name: grupoId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Lista de alumnos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alumno'
        '404':
          description: Alumnos no encontrados

    post:
      tags:
        - grupos
        - alumnos
      operationId: addAlumnoToGrupo
      summary: Añadir un alumno a un grupo
      parameters:
        - in: path
          name: grupoId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ID del alumno a añadir al grupo
              required:
                - id
              example:
                id: 2
      responses:
        '201':
          description: Alumno añadido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alumno'
        '404':
          description: Alumno no encontrado

  /grupos/{grupoId}/alumnos/{alumnoId}:
    delete:
      tags:
        - grupos
        - alumnos
      operationId: removeAlumnoFromGrupo
      summary: Eliminar un alumno de un grupo
      parameters:
        - in: path
          name: grupoId
          required: true
          schema:
            type: integer
        - in: path
          name: alumnoId
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Alumno eliminado correctamente del grupo
        '404':
          description: Alumno no encontrado

  /grupos/{grupoId}/profesores:
    get:
      tags:
        - grupos
        - profesores
      operationId: getProfesoresByGrupo
      summary: Obtener profesores de un grupo
      parameters:
        - in: path
          name: grupoId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Lista de profesores
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profesor'
        '404':
          description: Profesor no encontrado

    post:
      tags:
        - grupos
        - profesores
      operationId: addProfesorToGrupo
      summary: Añadir un profesor a un grupo
      parameters:
        - in: path
          name: grupoId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profesor'
            example:
              id: 3
              grupoIds: [ 1 ]
      responses:
        '201':
          description: Profesor añadido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profesor'
        '404':
          description: Profesor no encontrado

  /grupos/{grupoId}/profesores/{profesorId}:
    delete:
      tags:
        - grupos
        - profesores
      operationId: removeProfesorFromGrupo
      summary: Eliminar un profesor de un grupo
      parameters:
        - in: path
          name: grupoId
          required: true
          schema:
            type: integer
        - in: path
          name: profesorId
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Profesor eliminado correctamente del grupo
        '404':
          description: Profesor no encontrado

  /alumnos/{id}:
    delete:
      tags:
        - alumnos
      operationId: deleteAlumno
      summary: Eliminar un alumno
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Alumno eliminado correctamente
        '404':
          description: Alumno no encontrado

  /alumnos/{alumnoId}/contenido:
    get:
      tags:
        - contenido
      summary: Obtener contenido privado de un alumno
      operationId: getContenidoPrivadoAlumno
      parameters:
        - name: alumnoId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Lista de contenido privado del alumno
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContenidoItem'
        '404':
          description: Contenido no encontrado

    post:
      tags:
        - contenido
      summary: Añadir contenido privado al alumno
      operationId: addContenidoPrivadoAlumno
      parameters:
        - name: alumnoId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                texto:
                  type: string
                tipoContenido:
                  type: string
                  enum: [ PROGRAMACION, PRACTICO, TEMAS ]
                file:
                  type: string
                  format: binary
              required:
                - texto
                - tipoContenido
              example:
                texto: "esse dolore in sint"
                tipoContenido: "PROGRAMACION"
                file: "0000009062.pdf"
      responses:
        '201':
          description: Contenido añadido a lista privada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContenidoItem'

  /grupos/{grupoId}/meses:
    get:
      tags:
        - grupos
        - meses
      operationId: getMesesByGrupo
      summary: Obtener meses de un grupo
      parameters:
        - in: path
          name: grupoId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Lista de meses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Mes'
        '404':
          description: Mes no encontrado

    post:
      tags:
        - grupos
        - meses
      operationId: addMesToGrupo
      summary: Añadir mes a un grupo
      parameters:
        - in: path
          name: grupoId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mes'
      responses:
        '201':
          description: Mes añadido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mes'
        '404':
          description: Mes no encontrado

  /grupos/{grupoId}/meses/{mesId}/contenido:
    get:
      tags:
        - contenido
      summary: Obtener contenido público de un grupo en un mes
      operationId: getContenidoGrupoMes
      parameters:
        - name: grupoId
          in: path
          required: true
          schema:
            type: integer
        - name: mesId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Lista de contenido del grupo en ese mes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContenidoItem'
        '404':
          description: Contenido no encontrado

    post:
      tags:
        - contenido
      summary: Añadir contenido a un grupo en un mes (profesor)
      operationId: addContenidoToGrupoMes
      parameters:
        - name: grupoId
          in: path
          required: true
          schema:
            type: integer
        - name: mesId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                texto:
                  type: string
                tipoContenido:
                  type: string
                  enum: [ temas, programacion, practico ]
                file:
                  type: string
                  format: binary
                autorId:
                  type: integer
              required:
                - texto
                - tipoContenido
                - autorId
      responses:
        '201':
          description: Contenido creado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContenidoItem'

  /contenido/{id}:
    delete:
      tags:
        - contenido
      summary: Eliminar contenido por ID (solo el autor puede hacerlo)
      description: Permite eliminar un contenido si el usuario autenticado es el autor del mismo.
      operationId: deleteContenido
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Contenido eliminado correctamente
        '403':
          description: No tienes permiso para eliminar este contenido
        '404':
          description: Contenido no encontrado

  /simulacros:
    get:
      tags:
        - simulacros
      operationId: getSimulacros
      summary: Obtener simulacros
      responses:
        '200':
          description: Lista de simulacros
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Simulacro'
        '404':
          description: Simulacro no encontrado

    post:
      tags:
        - simulacros
      operationId: createSimulacro
      summary: Crear un nuevo simulacro (PDF + descripción)
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                descripcion:
                  type: string
                file:
                  type: string
                  format: binary
      responses:
        '201':
          description: Simulacro creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Simulacro'

  /simulacros/{id}:
    delete:
      tags:
        - simulacros
      operationId: deleteSimulacro
      summary: Eliminar un simulacro
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Simulacro eliminado correctamente
        '404':
          description: Simulacro no encontrado

  /profesores/{profesorId}/grupos:
    get:
      tags:
        - profesores
        - grupos
      operationId: getGruposByProfesor
      summary: Obtener grupos de un profesor
      parameters:
        - in: path
          name: profesorId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Lista de grupos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Grupo'
        '404':
          description: Grupo no encontrado

  /alumnos/{alumnoId}/grupos:
    get:
      tags:
        - alumnos
        - grupos
      summary: Obtener grupos de un alumno
      operationId: getGruposByAlumno
      parameters:
        - name: alumnoId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Lista de grupos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Grupo'
        '404':
          description: Grupo no encontrado

  /novedades/profesor:
    get:
      tags:
        - novedades
      operationId: getNovedadesProfesor
      summary: Obtener novedades para profesores
      parameters:
        - in: query
          name: fechaDesde
          required: false
          schema:
            type: string
            format: date-time
          example: "1983-07-22T02:10:54.131Z"
          description: Fecha a partir de la cual se desean obtener novedades
      responses:
        '200':
          description: Lista de novedades dirigidas a profesores
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Novedad'
              example:
                - id: 1
                  texto: "Juan del Grupo 1 ha subido 1 Temario"
                  tipoDestinatario: profesor
                  fechaCreacion: "2025-06-01T10:20:26.767Z"
                - id: 2
                  texto: "Ignacio del Grupo 1 ha subido 1 Temario"
                  tipoDestinatario: profesor
                  fechaCreacion: "2025-06-01T10:22:13.842Z"
        '404':
          description: Novedades no encontradas

    post:
      tags:
        - novedades
      operationId: createNovedadProfesor
      summary: Crear novedad para profesores
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Novedad'
            example:
              texto: "Juan del Grupo 1 ha subido 1 Temario"
              fechaCreacion: "2025-05-27T10:15:00Z"
      responses:
        '201':
          description: Novedad creada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Novedad'

  /novedades/alumno:
    get:
      tags:
        - novedades
      operationId: getNovedadesAlumno
      summary: Obtener novedades para alumnos
      responses:
        '200':
          description: Lista de novedades
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Novedad'
        '404':
          description: Novedad no encontrada

    post:
      tags:
        - novedades
      operationId: createNovedadAlumno
      summary: Crear novedad para alumnos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Novedad'
            example:
              texto: "Teneis que estudiar para el examen, recordatorio"
              fechaCreacion: "2025-05-27T10:15:00Z"
      responses:
        '201':
          description: Novedad creada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Novedad'

  /novedades/{id}:
    delete:
      tags:
        - novedades
      operationId: deleteNovedad
      summary: Eliminar una novedad
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Novedad eliminada correctamente
        '404':
          description: Novedad no encontrada

  /noticias:
    get:
      tags:
        - noticias
      operationId: getNoticias
      summary: Obtener noticias
      responses:
        '200':
          description: Lista de noticias
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Noticia'
        '404':
          description: Noticia no encontrada

    post:
      tags:
        - noticias
      operationId: createNoticia
      summary: Crear una nueva noticia (Descripción + url + pdf)
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                descripcion:
                  type: string
                url:
                    type: string
                    format: uri
                file:
                  type: string
                  format: binary
      responses:
        '201':
          description: Noticia creada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Noticia'

  /noticias/{id}:
    delete:
      tags:
        - noticias
      operationId: deleteNoticia
      summary: Eliminar una noticia
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Noticia eliminada correctamente
        '404':
          description: Noticia no encontrada

  /grupos/{grupoId}/reuniones:
    get:
      tags:
        - reuniones
      operationId: getReunionesByGrupo
      summary: Obtener reuniones de un grupo
      parameters:
        - in: path
          name: grupoId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Lista de reuniones
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reunion'
        '404':
          description: Reunion no encontrada

    post:
      tags:
        - reuniones
      operationId: createReunion
      summary: Crear una reunión para un grupo
      parameters:
        - in: path
          name: grupoId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reunion'
            example:
              titulo: "Tutoría de repaso"
              descripcion: "Repaso general antes del simulacro"
              fechaHora: "2025-06-01T17:00:00Z"
              enlace: "https://meet.google.com/abc-defg-hij"
      responses:
        '201':
          description: Reunión creada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reunion'
        '409':
          description: Ya existe una reunión para este grupo

  /reuniones/{id}:
    put:
      tags:
        - reuniones
      operationId: updateReunion
      summary: Actualizar una reunión
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reunion'
      responses:
        '200':
          description: Reunión actualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reunion'
        '404':
          description: Reunion no encontrada

    delete:
      tags:
        - reuniones
      operationId: deleteReunion
      summary: Eliminar una reunión
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Reunión eliminada correctamente
        '404':
          description: Reunion no encontrada

  /archivos/upload:
    post:
      tags:
        - archivos
      operationId: uploadArchivo
      summary: Subir archivo
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '201':
          description: Archivo subido correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Archivo'

  /archivos/{id}/download:
    get:
      tags:
        - archivos
      operationId: downloadArchivo
      summary: Descargar archivo por ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Archivo descargado
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '404':
          description: Archivo no encontrado

  /archivos/{id}/info:
    get:
      tags:
        - archivos
      operationId: getArchivoInfo
      summary: Obtener metadatos de un archivo por ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Metadatos del archivo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Archivo'
        '400':
          description: ID de archivo inválido
        '404':
          description: Archivo no encontrado

  /chat/mensajes:
    get:
      tags:
        - chat
      operationId: getMensajes
      summary: Obtener mensajes
      parameters:
        - in: query
          name: remitente
          required: false
          schema:
            type: integer
        - in: query
          name: destinatario
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Lista de mensajes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Mensaje'
        '404':
          description: Mensaje no encontrado
    post:
      tags:
        - chat
      operationId: enviarMensaje
      summary: Enviar un mensaje
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mensaje'
      responses:
        '201':
          description: Mensaje enviado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mensaje'

  /chat/conversaciones:
    get:
      tags:
        - chat
      operationId: getConversaciones
      summary: Obtener lista de conversaciones
      parameters:
        - in: query
          name: usuarioId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Lista de conversaciones
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Conversacion'
        '404':
          description: Conversación no encontrada

components:
  schemas:
    Grupo:
      type: object
      required: [ nombre, meses ]
      properties:
        id:
          type: integer
          description: ID único del grupo.
        nombre:
          type: string
          minLength: 1
          maxLength: 100
          description: Nombre del grupo.
        meses:
          type: array
          minItems: 1
          description: Lista de meses del grupo.
          items:
            $ref: '#/components/schemas/Mes'
      example:
        id: 1
        nombre: Grupo 1
        meses:
          - id: 1
            nombre: Septiembre
            grupoId: 1
          - id: 2
            nombre: Octubre
            grupoId: 1

    Mes:
      type: object
      required: [ nombre, grupoId ]
      properties:
        id:
          type: integer
          description: ID del mes.
        nombre:
          type: string
          minLength: 1
          maxLength: 100
          description: Nombre del mes.
        grupoId:
          type: integer
          description: ID del grupo al que pertenece.
      example:
        id: 1
        nombre: Septiembre
        grupoId: 1

    ContenidoItem:
      type: object
      required: [texto, tipoContenido, autorId, mesId]
      description: Representa un recurso educativo (tema, programación o práctico).
      properties:
        id:
          type: integer
          description: ID del contenido.
        texto:
          type: string
          minLength: 1
          maxLength: 500
          description: Descripción o contenido textual.
        tipoContenido:
          type: string
          enum: [ temas, programacion, practico ]
          description: Tipo de contenido.
        autorId:
          type: integer
          description: ID del usuario que subió el contenido.
        mesId:
          type: integer
          description: ID del mes al que pertenece el contenido.
        archivoId:
          type: integer
          nullable: true
          description: ID del archivo asociado (si lo hay).
      example:
        id: 1
        texto: Introducción a la Ley Orgánica
        tipoContenido: temas
        autorId: 10
        mesId: 2
        archivoId: 7

    Archivo:
      type: object
      required: [nombre, tipo]
      description: Representa un archivo subido al sistema.
      properties:
        id:
          type: integer
          description: ID del archivo.
        nombre:
          type: string
          minLength: 1
          description: Nombre original del archivo.
        tipo:
          type: string
          minLength: 1
          description: Tipo MIME del archivo.
        url:
          type: string
          description: URL para acceder al archivo.
        datos:
          type: string
          format: byte
          description: Datos codificados en base64.
      example:
        id: 7
        nombre: temario.pdf
        tipo: application/pdf
        url: /archivos/7/download
        datos: JVBERi0xLjQKJcTl8uX...

    Simulacro:
      type: object
      required: [descripcion, archivoId]
      description: Representa un simulacro de examen con archivo PDF.
      properties:
        id:
          type: integer
          description: ID del simulacro.
        descripcion:
          type: string
          description: Descripción del simulacro.
        archivoId:
          type: integer
          description: ID del archivo asociado.
      example:
        id: 3
        descripcion: Simulacro 1 - Tema 2
        archivoId: 7

    Noticia:
      type: object
      required: [descripcion]
      description: Representa una noticia publicada en el tablón común.
      properties:
        id:
          type: integer
          description: ID de la noticia.
        descripcion:
          type: string
          description: Descripción o título de la noticia.
        url:
          type: string
          description: URL para acceder a la noticia.
        archivoId:
          type: integer
          description: ID del archivo adjunto.
      example:
        id: 5
        descripcion: Nueva guía de estudio disponible
        archivoId: 9

    Novedad:
      type: object
      required: [texto, fechaCreacion]
      description: Representa una notificación o novedad generada en la aplicación.
      properties:
        id:
          type: integer
          description: ID de la novedad.
        texto:
          type: string
          minLength: 1
          maxLength: 1000
          description: Mensaje de la novedad.
        tipoDestinatario:
          type: string
          enum: [ profesor, alumno ]
          description: Público objetivo de la novedad.
        fechaCreacion:
          type: string
          format: date-time
          description: Fecha y hora de creación.
      example:
        id: 12
        texto: Juan del Grupo 1 ha subido 1 Temario
        tipoDestinatario: profesor
        fechaCreacion: "2025-05-27T10:15:00Z"

    Reunion:
      type: object
      required: [titulo, fechaHora, grupoId]
      description: Representa una reunión entre alumnos y profesor.
      properties:
        id:
          type: integer
          description: ID de la reunión.
        titulo:
          type: string
          description: Título de la reunión.
        descripcion:
          type: string
          description: Descripción o detalles adicionales.
        fechaHora:
          type: string
          format: date-time
          description: Fecha y hora programadas.
        enlace:
          type: string
          description: Enlace de acceso a la reunión.
        grupoId:
          type: integer
          description: ID del grupo al que está asociada.
      example:
        id: 2
        titulo: Tutoría de repaso
        descripcion: Repaso general antes del simulacro
        fechaHora: "2025-06-01T17:00:00Z"
        enlace: https://meet.google.com/abc-defg-hij
        grupoId: 1

    Mensaje:
      type: object
      required: [remitente, destinatario, contenido]
      description: Representa un mensaje enviado entre usuarios.
      properties:
        id:
          type: integer
          description: ID del mensaje.
        remitente:
          type: integer
          minimum: 1
          description: ID del usuario remitente.
        destinatario:
          type: integer
          minimum: 1
          description: ID del usuario destinatario.
        contenido:
          type: string
          minLength: 1
          maxLength: 1000
          description: Texto del mensaje.
        leido:
          type: boolean
          description: Indica si el mensaje ha sido leído.
        fechaEnvio:
          type: string
          format: date-time
          description: Fecha y hora de envío.
      example:
        id: 21
        remitente: 5
        destinatario: 10
        contenido: ¿Has podido revisar el temario?
        leido: false
        fechaEnvio: "2025-05-27T09:45:00Z"

    Conversacion:
      type: object
      required: [usuarioId, otroUsuarioId, ultimoMensaje, fechaUltimoMensaje, noLeidos]
      description: Representa una conversación entre dos usuarios.
      properties:
        id:
          type: integer
          description: ID de la conversación.
        usuarioId:
          type: integer
          minimum: 1
          description: ID del usuario actual.
        otroUsuarioId:
          type: integer
          minimum: 1
          description: ID del otro participante.
        ultimoMensaje:
          type: string
          minLength: 1
          maxLength: 1000
          description: Último mensaje enviado.
        fechaUltimoMensaje:
          type: string
          format: date-time
          description: Fecha del último mensaje.
        noLeidos:
          type: integer
          minimum: 0
          description: Cantidad de mensajes no leídos.
      example:
        id: 4
        usuarioId: 10
        otroUsuarioId: 5
        ultimoMensaje: ¿Has podido revisar el temario?
        fechaUltimoMensaje: "2025-05-27T09:45:00Z"
        noLeidos: 1

    UsuarioBase:
      type: object
      required: [ tipo ]
      description: Clase base de usuarios, usada para discriminación de tipo.
      properties:
        tipo:
          type: string
          enum: [ alumno, profesor ]
          description: Tipo de usuario (alumno o profesor)
          readOnly: false  # ⚠️ esto permite que se genere el getter

    Alumno:
      allOf:
        - $ref: '#/components/schemas/UsuarioBase'
        - type: object
          required: [ nombre, grupoId ]
          properties:
            id:
              type: integer
            nombre:
              type: string
              minLength: 1
              maxLength: 100
            grupoId:
              type: integer
          description: Representa un alumno de la plataforma.
          example:
            id: 10
            nombre: Juan Pérez
            grupoId: 1
            tipo: alumno

    Profesor:
      allOf:
        - $ref: '#/components/schemas/UsuarioBase'
        - type: object
          required: [ nombre, grupoIds ]
          properties:
            id:
              type: integer
            nombre:
              type: string
              minLength: 1
              maxLength: 100
            grupoIds:
              type: array
              minItems: 1
              items:
                type: integer
          description: Representa un profesor con uno o varios grupos asignados.
          example:
            id: 5
            nombre: María López
            grupoIds: [ 1, 2 ]
            tipo: profesor

    Usuario:
      oneOf:
        - $ref: '#/components/schemas/Alumno'
        - $ref: '#/components/schemas/Profesor'
      discriminator:
        propertyName: tipo