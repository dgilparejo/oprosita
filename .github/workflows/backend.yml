name: Deploy oPROsita

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-test-and-deploy:
    name: Build, Test & Push Docker Images
    runs-on: ubuntu-latest

    steps:
      # Checkout del repositorio
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Configurar JDK 21 (ajusta si es 17)
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # Ejecutar tests y cobertura
      - name: Run Tests and Generate Coverage Report
        run: |
          cd backend/app
          mvn clean test jacoco:report

      # Verificar cobertura mínima del 10%
      - name: Check JaCoCo Coverage
        run: |
          cd backend/app
          MISSED=$(grep -oP '(?<=<counter type="INSTRUCTION" missed=")\d+' target/site/jacoco/jacoco.xml)
          COVERED=$(grep -oP '(?<=covered=")\d+' target/site/jacoco/jacoco.xml | paste -sd+ - | bc)
          TOTAL=$((MISSED + COVERED))
          PERCENT=$((100 * COVERED / TOTAL))
          echo "Cobertura: $PERCENT%"
          if [ "$PERCENT" -lt 10 ]; then
            echo "Cobertura de código insuficiente. Deteniendo el workflow."
            exit 1
          fi

      # Subir reporte como artefacto
      - name: Upload JaCoCo Report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: backend/app/target/site/jacoco/

      # Login DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build & Push MySQL image
      - name: Build and Push MySQL Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/oprosita-mysql:1.0.0 ./backend/docker/mysql
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/oprosita-mysql:1.0.0

      # Build & Push Backend (Spring Boot) image
      - name: Build and Push Backend Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/oprosita-backend:1.0.0 -f ./backend/docker/springboot/Dockerfile ./backend/app
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/oprosita-backend:1.0.0
